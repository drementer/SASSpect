/// Medya
///
/// Css @media sorgularının süpergücü
///
/// @param {number} $bitis - Girilen max-width değeri
/// @param {number} $baslangic - Girilen min-width değeri
/// @param {number} $max-width - Atanan max-width değeri
/// @param {number} $$min-width - Atanan min-width değeri
/// @param {string} $medya-query - Medya sorgusu
/// @param {string} $medya-query-tipi - Atanan değerlerin unit tipi
///
@mixin medya($bitis: null, $baslangic: null) {
  $max-width: null;
  $min-width: null;
  $medya-query: '';

  @if $bitis {
    @if type-of($bitis) == number {
      $max-width: $bitis;
    } @else {
      $max-width: #{hazir-medya-degeri-al($bitis)}#{$varsayilan-medya-unit};
    }
  }

  @if $baslangic {
    @if type-of($baslangic) == number {
      $min-width: $baslangic;
    } @else {
      $min-width: #{hazir-medya-degeri-al($baslangic)}#{$varsayilan-medya-unit};
    }
  }

  @if ($max-width != null) and ($min-width != null) {
    $medya-query: '(min-width: #{$min-width}) and (max-width: #{$max-width})';
  } @else if $max-width {
    $medya-query: '(max-width: #{$max-width})';
  } @else if $min-width {
    $medya-query: '(min-width: #{$min-width})';
  }

  @media screen and #{$medya-query} {
    @content;
  }
}

// Kısayollar

/// Min Medya
///
/// Minimum medya ve üzerinde çalışacak sorgu
///
/// @param {string | number} $deger - Girilen max-width değeri
///
@mixin min-medya($deger) {
  @include medya(null, $deger) {
    @content;
  }
}

/// Max Medya
///
/// Maximum medya ve üzerinde çalışacak sorgu
///
/// @param {string | number} $deger - Girilen max-width değeri
///
@mixin max-medya($deger) {
  @include medya($deger) {
    @content;
  }
}

/// Aralık Medya
///
/// Maximum medya ve üzerinde çalışacak sorgu
///
/// @param {string | number} $bitis - Girilen max-width değeri
/// @param {string | number} $baslangic - Girilen min-width değeri
///
@mixin aralik-medya($baslangic, $bitis) {
  @include medya($bitis, $baslangic) {
    @content;
  }
}

/// Medya Boyutlarını Göster
///
/// Ekranda medya boyutlarını gösterir
///
/// @param {map} $boyutlar [$medya-boyutlari] - Gösterilecek medya boyutları
///
@mixin medya-boyutlarini-goster($boyutlar: $medya-boyutlari) {
  @if $medya-boyutlarini-goster {
    body::after {
      position: fixed;
      z-index: 99;
      right: 0;
      top: 0;
      padding: 0.5rem 1rem;
      background-color: $beyaz-3;
      border: 1px solid $siyah;

      @each $medya-boyutu-ismi, $medya-boyutu in $boyutlar {
        $boyut: $medya-boyutu-ismi;
        $icerik: '#{$medya-boyutu-ismi}';

        @if $medya-boyutu {
          $boyut: $medya-boyutu * 1px;
          $icerik: '#{$medya-boyutu-ismi}: >= #{$boyut}';
        }

        @include min-medya($boyut) {
          content: '#{$icerik}';
        }
      }
    }
  }
}

/// @type boolen
$medya-boyutlarini-goster: true;

/// @type boolen
$varsayilan-medya-boyutlarini-kullan: true;

/// @type map
$boyutlar: '';

@if $varsayilan-medya-boyutlarini-kullan {
  $boyutlar: $medya-boyutlari;
} @else {
  $boyutlar: (
    xs: null,
    sm: 576,
  );
}

/// Medya boyutlarını gösteri çalıştırır
@include medya-boyutlarini-goster($boyutlar);
