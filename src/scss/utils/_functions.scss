@use './variables' as *;

/// Medya değerini '$medya-boyutlari'ndan alır
/// 
/// @group medya
///
/// @param {string} $deger - Alınacak değer
/// @require {variable} $medya-boyutlari - Medya boyutlari
/// @return {number} - Medya değeri
/// @throw Aranan değer `$medya-boyutlari` içinde yok
/// 
/// @example
///   @debug medya-degeri-al(xl);
///     //-> 75em
///
@function medya-degeri-al($deger) {
  @if map-has-key($medya-boyutlari, $deger) {
    @return map-get($medya-boyutlari, $deger);
  } @else {
    @error $deger + "'i hazır değerler içinde yok.";
  }
}

/// Px değerini em değerine çevirir
///
/// @param {number} $px - Çevrilecek px değeri
/// @require {variable} $root-font-size - Root font size
/// @return {number} - Em değeri
/// 
/// @example
///   @debug px2em(16);
///    //-> 1em
///
@function px2em($px) {
  @if unitless($px) {
    $px: $px * 1px;
  }
  @if comparable($px, 1em) {
    @return $px;
  }
  @return calc($px / $root-font-size) * 1em;
}

/// Px değerini rem değerine çevirir
///
/// @param {number} $px - Çevrilecek px değeri
/// @require {variable} $root-font-size - Root font size
/// @return {number} - Rem değeri
/// 
/// @example
///   @debug px2em(16);
///    //-> 1rem
///
@function px2rem($px) {
  @if unitless($px) {
    $px: $px * 1px;
  }
  @if comparable($px, 1rem) {
    @return $px;
  }
  @return calc($px / $root-font-size) * 1rem;
}
